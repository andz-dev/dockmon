version: '3'

networks:
  monitor-frontend:
    driver: bridge
  monitor-backend:
    external: false
  

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    image: prom/prometheus:v2.5.0
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    restart: on-failure
    expose:
      - 9090
    networks:
      - monitor-backend
  
  alertmanager:
    image: prom/alertmanager:v0.15.3
    container_name: alertmanager
    volumes: 
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: on-failure
    expose:
      - 9093
    networks:
      - monitor-backend

  nodeexporter:
    image: prom/node-exporter:v0.16.0
    container_name: nodeexporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: on-failure
    expose:
      - 9100
    networks:
      - monitor-backend

  cadvisor:
    image: google/cadvisor:v0.32.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: on-failure
    expose:
      - 8080
    networks:
      - monitor-backend
  
  grafana:
    image: grafana/grafana:5.3.4
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana/
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      # - ./grafana/provisioning/datasources:/etc/grafana/datasources
      # - ./grafana/provisioning/dashboards:/etc/grafana/dashboards
      # - ./grafana/setup.sh:/setup.sh
    # entrypoint: /setup.sh
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: on-failure
    expose:
      - 3000
    networks:
      - monitor-backend

  # https://hub.docker.com/r/prom/pushgateway/
  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    restart: on-failure
    expose:
      - 9091
    networks:
      - monitor-backend

  reverse-proxy:
    image: traefik:1.7.4
    command: --web --web.metrics.prometheus --web.metrics.prometheus.buckets="0.1,0.3,1.2,5.0" --docker --docker.domain=docker.localhost --logLevel=DEBUG
    container_name: reverseproxy
    restart: on-failure
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - monitor-frontend
      - monitor-backend